version: '3'
services:

  rabbitmq:
    container_name: senzing-rabbitmq
    environment:
#     See https://github.com/bitnami/bitnami-docker-rabbitmq#configuration
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD:-bitnami}
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME:-user}
    image: bitnami/rabbitmq:${SENZING_DOCKER_IMAGE_VERSION_BITNAMI_RABBITMQ:-3.8.19-debian-10-r6}
    logging:
      driver: syslog
      options:
        syslog-address: "tcp://192.168.0.42:123"
    networks:
      - backend
    ports:
      - 15672:15672
      - 5672:5672
    restart: always
    volumes:
      - ${RABBITMQ_DIR}:/bitnami

  producer:
    container_name: senzing-stream-producer
    depends_on:
      - rabbitmq
    environment:
#     See https://github.com/Senzing/stream-producer#configuration
      SENZING_DELAY_IN_SECONDS: 30
      SENZING_INPUT_URL: "https://s3.amazonaws.com/public-read-access/TestDataSets/loadtest-dataset-1M.json"
      SENZING_RABBITMQ_HOST: senzing-rabbitmq
      SENZING_RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD:-bitnami}
      SENZING_RABBITMQ_QUEUE: senzing-rabbitmq-queue
      SENZING_RABBITMQ_USERNAME: ${RABBITMQ_USERNAME:-user}
      SENZING_RECORD_MAX: ${SENZING_RECORD_MAX:-5000}
      SENZING_RECORD_MONITOR: 1000
      SENZING_SUBCOMMAND: json-to-rabbitmq
    image: senzing/stream-producer:${SENZING_DOCKER_IMAGE_VERSION_STREAM_PRODUCER:-1.5.1}
    networks:
      - backend
    restart: on-failure

  postgres:
    container_name: senzing-postgres
    environment:
#     See https://github.com/docker-library/docs/blob/master/postgres/README.md#environment-variables
      POSTGRES_DB: ${POSTGRES_DB:-G2}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_USERNAME: ${POSTGRES_USERNAME:-postgres}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USERNAME:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    image: bitnami/postgresql:${SENZING_DOCKER_IMAGE_VERSION_BITNAMI_POSTGRESQL:-11.12.0-debian-10-r50}
    networks:
      - backend
    ports:
      - 5432:5432
    restart: always
    volumes:
      - ${POSTGRES_DIR:-/var/lib/postgresql/data}:/var/lib/postgresql/data

  phppgadmin:
    container_name: senzing-phppgadmin
    environment:
#     See https://github.com/dockage/phppgadmin#available-configuration-parameters
      - PHP_PG_ADMIN_AJAX_REFRESH=3
      - PHP_PG_ADMIN_AUTO_COMPLETE=default on
      - PHP_PG_ADMIN_DEFAULT_LANG=auto
      - PHP_PG_ADMIN_EXTRA_LOGIN_SECURITY=false
      - PHP_PG_ADMIN_HELP_BASE=http://www.postgresql.org/docs/%s/interactive/
      - PHP_PG_ADMIN_LEFT_WIDTH=200
      - PHP_PG_ADMIN_MAX_CHARS=50
      - PHP_PG_ADMIN_MAX_ROWS=30
      - PHP_PG_ADMIN_MIN_PASSWORD_LENGTH=1
      - PHP_PG_ADMIN_OWNED_ONLY=false
      - PHP_PG_ADMIN_SERVER_DEFAULT_DB=template1
      - PHP_PG_ADMIN_SERVER_DESC=PostgreSQL
      - PHP_PG_ADMIN_SERVER_HOST=senzing-postgres
      - PHP_PG_ADMIN_SERVER_PG_DUMPALL_PATH=/usr/bin/pg_dumpall
      - PHP_PG_ADMIN_SERVER_PG_DUMP_PATH=/usr/bin/pg_dump
      - PHP_PG_ADMIN_SERVER_PORT=5432
      - PHP_PG_ADMIN_SERVER_SSL_MODE=allow
      - PHP_PG_ADMIN_SHOW_ADVANCED=false
      - PHP_PG_ADMIN_SHOW_COMMENTS=true
      - PHP_PG_ADMIN_SHOW_OIDS=false
      - PHP_PG_ADMIN_SHOW_SYSTEM=false
      - PHP_PG_ADMIN_THEME=default
      - PHP_PG_ADMIN_USE_XHTML_STRICT=false
    image: senzing/phppgadmin:${SENZING_DOCKER_IMAGE_VERSION_PHPPGADMIN:-1.0.0}
    networks:
      - backend
    ports:
      - 9171:80
      - 9172:443
    restart: always


  elk:
    container_name: senzing-elk
    image: sebp/elk
    networks:
      - backend
    ports:
      - 5601:5601
      - 9200:9200
      - 5044:5044
    restart: always

networks:
  backend:
